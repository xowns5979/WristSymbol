library(dplyr)
# Names
names = c("dh, sb, yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(oneletter_df,file_data)
}
base_df$name = factor(oneletter_df$name, levels=names)
base_df$name = factor(base_df$name, levels=names)
base_df
# Names
names = c("dh", "sb", "yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(oneletter_df,file_data)
}
base_df$name = factor(base_df$name, levels=names)
base_df
setwd("C:/Users/hcil/Desktop/Github/WristSymbol/analyze")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(oneletter_df,file_data)
}
base_df$name = factor(base_df$name, levels=names)
base_df
base_df$name = factor(base_df$name, levels=names)
# Names
names = c("dh", "sb", "yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(base_df,file_data)
}
base_df$name = factor(base_df$name, levels=names)
base_df
out = group_by(oneletter_df, name) %>%
summarise(
count = n(),
mean = mean(correct, na.rm = TRUE)*100,
sd = sd(correct, na.rm = TRUE)*100
)
out
out = group_by(base_df, name) %>%
summarise(
count = n(),
mean = mean(correct, na.rm = TRUE)*100,
sd = sd(correct, na.rm = TRUE)*100
)
out
# Names
names = c("dh", "sb", "yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(base_df,file_data)
}
base_df$name = factor(base_df$name, levels=names)
base_df
out = group_by(base_df, name) %>%
summarise(
count = n(),
mean = mean(correct, na.rm = TRUE)*100,
sd = sd(correct, na.rm = TRUE)*100
)
out
out = group_by(base_df, name) %>%
summarise(
count = n(),
mean = mean(correct, na.rm = TRUE)*100,
#sd = sd(correct, na.rm = TRUE)*100
)
out
base_df[base_df$pattern == "a(3)"]
base_df[base_df$pattern == "a(3)",]
base_df[base_df$pattern == "a(3)",]$correct
mean(base_df[base_df$pattern == "a(3)",]$correct)
out = group_by(base_df, pattern) %>%
summarise(
count = n(),
mean = mean(correct, na.rm = TRUE)*100,
#sd = sd(correct, na.rm = TRUE)*100
)
out
library(ggcorrplot)
library(caret)
library(e1071)
library(readxl)
library(ggplot2)
library(dplyr)
# Names
names = c("dh", "sb", "yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(base_df,file_data)
}
# Names
names = c("dh", "sb", "yb")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:3){
file_name = paste("data/",names[i],"_exp.csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
file_data$name = names[i]
base_df = rbind(base_df,file_data)
}
base_df$name = factor(base_df$name, levels=names)
# Confusion matrix
actual_first <- as.factor(substr(new_data$pattern,1,1))
bas_df
base_df
# Confusion matrix
actual_first <- as.factor(substr(base_df$pattern,3,3))
actual_first
predicted_first <- as.factor(new_data$answer)
predicted_first <- as.factor(base_df$answer)
predicted_first
len(predicted_first)
length(predicted_first)
length(actual_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_df <- as.data.frame(as.matrix(cm_first))
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 2)+
labs(title="Sunmin, First Letter ConfusionMatrix", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
cm_df
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 2)+
labs(title="Sunmin, First Letter ConfusionMatrix", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 2)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 5)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
mean(base_df$correct)
