cond = c("armFront","armBody")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:2)
{
for (i in 1:10){
file_name = paste("Exp14_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
base_df$cond
base_df[which(base_df$cond == "armBody"),]
library(dplyr)
# Names
names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("armFront","armBody")
mode = c("training","main")
base_df = data.frame()
base_df = data.frame()
for(j in 1:1)
{
for (i in 1:10){
file_name = paste("Exp14_data/",names[i] ,"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, cond, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
c1 = mean(c1)*100,
c2 = mean(c2)*100,
c3 = mean(c3)*100,
reactionTime = mean(reactionTime)
#diff_1 = sum(diffCount_1),
#diff_2 = sum(diffCount_2),
#diff_3 = sum(diffCount_3)
#rt = mean(reaction_time)
#sd = sd(correct, na.rm = TRUE)*100
)
print(result,n=36)
result = group_by(base_df, cond) %>%
summarise(
count = n(),
correct = mean(correct)*100,
c1 = mean(c1)*100,
c2 = mean(c2)*100,
c3 = mean(c3)*100,
reactionTime = mean(reactionTime)
#diff_1 = sum(diffCount_1),
#diff_2 = sum(diffCount_2),
#diff_3 = sum(diffCount_3)
#rt = mean(reaction_time)
#sd = sd(correct, na.rm = TRUE)*100
)
print(result,n=36)
base_df = data.frame()
for(j in 2:2)
{
for (i in 1:10){
file_name = paste("Exp14_data/",names[i] ,"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
base_df$id = factor(base_df$id, levels=names)
result = group_by(base_df, cond) %>%
summarise(
count = n(),
correct = mean(correct)*100,
c1 = mean(c1)*100,
c2 = mean(c2)*100,
c3 = mean(c3)*100,
reactionTime = mean(reactionTime)
#diff_1 = sum(diffCount_1),
#diff_2 = sum(diffCount_2),
#diff_3 = sum(diffCount_3)
#rt = mean(reaction_time)
#sd = sd(correct, na.rm = TRUE)*100
)
print(result,n=36)
base_df[which(base_df$cond == "armBody"),]
base_df_armbody = base_df[which(base_df$cond == "armBody"),]
base_df_armFront = base_df[which(base_df$cond == "armFront"),]
base_df_armFront
base_df
# Names
names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("armFront","armBody")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:2)
{
for (i in 1:10){
file_name = paste("Exp14_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
base_df_armfront = base_df[which(base_df$cond == "armFront"),]
base_df_armbody = base_df[which(base_df$cond == "armBody"),]
base_df_armFront
base_df
base_df
base_df_armbody = base_df[which(base_df$cond == "armBody"),]
base_df_armbody
base_df_armbody
base_df_armFront
base_df_armfront = base_df[which(base_df$cond == "armFront"),]
base_df_armfront
base_df_armbody
x2 = ""
x1 = ""
x3 = ""
for(i in 1:length(base_df_armbody$realPattern)){
if(substr(toString(base_df_armbody$realPattern[i]), 1,1) == "1"){
x1 = "3"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "2"){
x1 = "1"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "3"){
x1 = "4"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "4"){
x1 = "2"
}
if(substr(toString(base_df_armbody$realPattern[i]), 2,2) == "1"){
x2 = "3"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "2"){
x2 = "1"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "3"){
x2 = "4"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "4"){
x2 = "2"
}
if(substr(toString(base_df_armbody$realPattern[i]), 3,3) == "1"){
x3 = "3"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 3,3) == "2"){
x3 = "1"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 3,3) == "3"){
x3 = "4"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 3,3) == "4"){
x3 = "2"
}
modified = strtoi(paste(x1,x2,x3,sep=""))
base_df_armbody$realPattern[i] = modified
}
base_df_armbody
x1 = ""
x2 = ""
x3 = ""
x1 = ""
x3 = ""
for(i in 1:length(base_df_armbody$userAnswer)){
if(substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "1"){
x1 = "3"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "2"){
x1 = "1"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "3"){
x1 = "4"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "4"){
x1 = "2"
}
if(substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "1"){
x2 = "3"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "2"){
x2 = "1"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "3"){
x2 = "4"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "4"){
x2 = "2"
}
if(substr(toString(base_df_armbody$userAnswer[i]), 3,3) == "1"){
x3 = "3"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 3,3) == "2"){
x3 = "1"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 3,3) == "3"){
x3 = "4"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 3,3) == "4"){
x3 = "2"
}
modified = strtoi(paste(x1,x2,x3,sep=""))
base_df_armbody$userAnswer[i] = modified
}
x2 = ""
base_df_armbody
base_df = c()
base_df = rbind(base_df, base_df_armfront)
base_df = rbind(base_df, base_df_armbody)
base_Df
base_df
# Confusion matrix
#actual_first <- as.factor(realPattern_one)
#predicted_first <- as.factor(userAnswer_one)
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
actual_first
predicted_first
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
library(ggcorrplot)
library(caret)
library(e1071)
library(readxl)
library(ggplot2)
library(dplyr)
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:1)
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:1)
{
for (i in 1:10){
file_name = paste("Exp14_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:1)
{
for (i in 1:10){
file_name = paste("Exp7_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:1)
{
for (i in 1:10){
file_name = paste("Exp7_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
realPattern_first = as.integer(substr(as.character(base_df$realPattern),1,1))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),1,1))
realPattern_one = c()
userAnswer_one = c()
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
realPattern_first = as.integer(substr(as.character(base_df$realPattern),2,2))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),2,2))
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
realPattern_first = as.integer(substr(as.character(base_df$realPattern),3,3))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),3,3))
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
# Confusion matrix
actual_first <- as.factor(realPattern_one)
predicted_first <- as.factor(userAnswer_one)
str(actual_first)
str(predicted_first)
actual_first
predicted_first
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
base_df
realPattern_one = c()
userAnswer_one = c()
realPattern_first = as.integer(substr(as.character(base_df$realPattern),1,1))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),1,1))
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
realPattern_first = as.integer(substr(as.character(base_df$realPattern),2,2))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),2,2))
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
# Confusion matrix
actual_first <- as.factor(realPattern_one)
predicted_first <- as.factor(userAnswer_one)
str(actual_first)
str(predicted_first)
actual_first
predicted_first
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 2:2)
{
for (i in 1:10){
file_name = paste("Exp7_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
realPattern_first = as.integer(substr(as.character(base_df$realPattern),1,1))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),1,1))
realPattern_one = c()
userAnswer_one = c()
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
realPattern_first = as.integer(substr(as.character(base_df$realPattern),2,2))
userAnswer_first = as.integer(substr(as.character(base_df$userAnswer),2,2))
realPattern_one = c(realPattern_one, realPattern_first)
userAnswer_one = c(userAnswer_one, userAnswer_first)
str(realPattern_one)
str(userAnswer_one)
# Confusion matrix
actual_first <- as.factor(realPattern_one)
predicted_first <- as.factor(userAnswer_one)
str(actual_first)
str(predicted_first)
actual_first
predicted_first
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for(j in 1:2)
{
for (i in 1:10){
file_name = paste("Exp7_data/",names[i],"_",cond[j],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
}
base_df
base_df_armfront = base_df[which(base_df$cond == "Distal"),]
base_df_armbody = base_df[which(base_df$cond == "Body"),]
base_df_armfront
base_df_armbody
x1 = ""
x2 = ""
x3 = ""
x1 = ""
x2 = ""
for(i in 1:length(base_df_armbody$realPattern)){
if(substr(toString(base_df_armbody$realPattern[i]), 1,1) == "1"){
x1 = "3"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "2"){
x1 = "1"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "3"){
x1 = "4"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 1,1) == "4"){
x1 = "2"
}
if(substr(toString(base_df_armbody$realPattern[i]), 2,2) == "1"){
x2 = "3"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "2"){
x2 = "1"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "3"){
x2 = "4"
}
else if (substr(toString(base_df_armbody$realPattern[i]), 2,2) == "4"){
x2 = "2"
}
modified = strtoi(paste(x1,x2,sep=""))
base_df_armbody$realPattern[i] = modified
}
x1 = ""
x2 = ""
for(i in 1:length(base_df_armbody$userAnswer)){
if(substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "1"){
x1 = "3"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "2"){
x1 = "1"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "3"){
x1 = "4"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 1,1) == "4"){
x1 = "2"
}
if(substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "1"){
x2 = "3"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "2"){
x2 = "1"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "3"){
x2 = "4"
}
else if (substr(toString(base_df_armbody$userAnswer[i]), 2,2) == "4"){
x2 = "2"
}
modified = strtoi(paste(x1,x2,sep=""))
base_df_armbody$userAnswer[i] = modified
}
base_df_armbody
base_df = c()
base_df = rbind(base_df, base_df_armbody)
base_df = rbind(base_df, base_df_armfront)
base_df
predicted_first <- as.factor(base_df$userAnswer)
# Confusion matrix
#actual_first <- as.factor(realPattern_one)
#predicted_first <- as.factor(userAnswer_one)
actual_first <- as.factor(base_df$realPattern)
str(actual_first)
str(predicted_first)
actual_first
predicted_first
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
