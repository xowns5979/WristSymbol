base_df$correct[j] = "0"
}
if( substr( toString(base_df$realPattern[j]), 1, 1 ) == substr( toString(base_df$userAnswer[j]),1,1) ){
base_df$c1[j] = "1"
}
else{
base_df$c1[j] = "0"
}
if( substr( toString(base_df$realPattern[j]), 2, 2 ) == substr( toString(base_df$userAnswer[j]),2,2) ){
base_df$c2[j] = "1"
}
else{
base_df$c2[j] = "0"
}
}
base_df
write.csv(base_df,"YB_B_main_modified.csv",row.names=FALSE)
library(dplyr)
# Names
names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(reaction_time)
)
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
# Names
names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
# Names
names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
mean(base_df$c1)
mean(base_df$c2)
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
base_df
base_df[244,]
base_df[245,]
base_df[250,]
base_df = base_df[-250,]
base_df
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:9){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
base_df[190,]
base_df = base_df[-190,]
base_df$id = factor(base_df$id, levels=names)
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
library(ggcorrplot)
library(caret)
library(e1071)
library(readxl)
library(ggplot2)
library(dplyr)
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:9){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df = base_df[-190,]
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:9){
file_name = paste("data/",names[i],"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p5","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:2){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
predicted_first
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p5","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:2){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
actual_first
str(predicted_first)
print(str(predicted_first))
str(predicted_first, list.len=12)
predicted_first
str(actual_first)
str(predicted_first)
base_df
base_df$userAnswer
as.factor(base_df$userAnswer)
base_df = base_df[-10,]
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p5","p10")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:2){
file_name = paste("data/",names[i],"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
library(ggcorrplot)
library(caret)
library(e1071)
library(readxl)
library(ggplot2)
library(dplyr)
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p6","p7","p8","p9")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:2){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p6","p7","p8","p9")
cond = c("Distal","Body")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:7){
file_name = paste("data/",names[i],"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
#names = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10")
#names = c("p2","p3","p4","p5","p6","p7","p8","p9","p10")
names = c("p2","p3","p4","p6","p7","p8","p9")
cond = c("Distal","Body")
mode = c("training","main")
# 1. 1 Letter Accuracy [%]
base_df = data.frame()
for (i in 1:7){
file_name = paste("data/",names[i],"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
# Confusion matrix
actual_first <- as.factor(base_df$realPattern)
predicted_first <- as.factor(base_df$userAnswer)
str(actual_first)
str(predicted_first)
length(actual_first)
length(predicted_first)
cm_first <- confusionMatrix(predicted_first, actual_first)
cm_temp = cm_first$table
cm_df <- as.data.frame(as.matrix(cm_temp))
cm_df
ggplot(cm_df) +
geom_tile(aes(x=Prediction, y=Reference, fill=Freq)) +
coord_equal() +
geom_text(aes(x=Prediction, y=Reference, label = sprintf("%1.0f", Freq)), vjust = 0.3, size= 4)+
labs(title="", x="User Typed Pattern", y="Actual Pattern") +
scale_y_discrete(limits = rev(levels(cm_df$Reference))) +
scale_fill_gradient(low="white", high="slategrey") +
theme_bw()
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
library(dplyr)
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[2],"_",mode[1],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[1],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
# Names
names = c("p2","p3","p4","p6","p7","p8","p9","p10","p11","p12")
cond = c("Distal","Body")
mode = c("training","main")
base_df = data.frame()
for (i in 1:10){
file_name = paste("data/",names[i] ,"_",cond[2],"_",mode[2],".csv",sep="")
file_data = read.csv(file_name, header=T, stringsAsFactors = F)
base_df = rbind(base_df,file_data)
}
base_df$id = factor(base_df$id, levels=names)
base_df
result = group_by(base_df, id) %>%
summarise(
count = n(),
correct = mean(correct)*100,
rt = mean(enterstamp - playendstamp)
)
print(result,n=36)
